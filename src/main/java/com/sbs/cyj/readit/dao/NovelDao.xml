<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.cyj.readit.dao.NovelDao">
	<select id="getCategories" resultType="category">
		SELECT *
		FROM category;
	</select>
	
	<select id="getNovelsByMemberId" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer, C.name AS extra__cateName
		FROM novel AS N
		INNER JOIN `member` AS M
		INNER JOIN category AS C
		ON N.memberId = M.id
		AND N.displayStatus = 1
		AND N.cateId = C.id
		AND N.seriesStatus = 1
		AND M.id = #{memberId}
		ORDER BY N.id DESC;
	</select>
	
	<select id="getNovels" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer, C.name AS extra__cateName
		FROM novel AS N
		INNER JOIN `member` AS M
		INNER JOIN category AS C
		ON N.memberId = M.id
		AND N.displayStatus = 1
		AND N.cateId = C.id
		AND seriesStatus = 1
		ORDER BY N.id DESC;
	</select>
	
	<insert id="genDefaultNovel" useGeneratedKeys="true" keyProperty="id" >
		INSERT
		INTO novel
		SET regDate = NOW(),
		updateDate = NOW(),
		`name` = #{nickname},
		cateId = 1,
		memberId = #{memberId};
	</insert>
	
	<select id="getNovelById" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer
		FROM novel AS N
		INNER JOIN `member` AS M
		ON N.memberId = M.id
		AND N.displayStatus = 1
		WHERE N.id = #{id};
	</select>
	
	<select id="checkNovelExistByMemberId" resultMap="novel">
		SELECT *
		FROM novel
		WHERE displayStatus = 1
		AND memberId = #{memberId};
	</select>
	
	<insert id="genNovel" useGeneratedKeys="true" keyProperty="id" >
		INSERT
		INTO novel
		SET regDate = NOW(),
		updateDate = NOW(),
		`name` = #{name},
		cateId = #{cateId},
		memberId = #{memberId},
		seriesStatus = #{seriesStatus};
	</insert>
	
	<update id="delete">
		UPDATE novel
		SET updateDate = NOW(),
		delDate = NOW(),
		delStatus = 1,
		displayStatus = 0
		WHERE id = #{id};
	</update>
	
	<select id="isExistsNameDup" resultMap="novel">
		SELECT *
		FROM novel
		WHERE displayStatus = 1
		AND name = #{name};
	</select>
	
	<update id="modifyNovel">
		UPDATE novel
		SET updateDate = NOW(),
		name = #{name},
		cateId = #{cateId},
		seriesStatus = #{seriesStatus}
		WHERE id = #{id};
	</update>
	
	<!-- <select id="getNovelsByCateId" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer, C.name AS extra__cateName
		FROM novel AS N
		INNER JOIN `member` AS M
		INNER JOIN category AS C
		ON N.memberId = M.id
		AND N.displayStatus = 1
		AND N.cateId = C.id
		AND C.id = #{cateId}
		ORDER BY N.id DESC;
	</select> -->
	
	<update id="updateTotalHitByNovelId">
		UPDATE novel
		SET updateDate = NOW(),
		totalHit = #{totalHit}
		WHERE id = #{novelId};
	</update>
	
	<select id="getNovelsBySearchKeyword" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer, C.name AS extra__cateName
		FROM novel AS N
		INNER JOIN `member` AS M
		INNER JOIN category AS C
		ON N.memberId = M.id
		AND N.displayStatus = 1
		AND N.cateId = C.id
		AND seriesStatus = 1
		AND N.name LIKE CONCAT('%', #{searchKeyword}, '%')
		ORDER BY N.id DESC;
	</select>
	
	<select id="getNovelsByMemberIdAndSearchKeyword" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer, C.name AS extra__cateName
		FROM novel AS N
		INNER JOIN `member` AS M
		INNER JOIN category AS C
		ON N.memberId = M.id
		AND N.displayStatus = 1
		AND N.cateId = C.id
		AND seriesStatus = 1
		AND N.memberId = #{memberId}
		AND N.name LIKE CONCAT('%', #{searchKeyword}, '%')
		ORDER BY N.id DESC;
	</select>
	
	<update id="upTotalChByNovelId">
		UPDATE novel
		SET updateDate = NOW(),
		totalCh = totalCh+1
		WHERE id = #{novelId};
	</update>
	
	<update id="downTotalChByNovelId">
		UPDATE novel
		SET updateDate = NOW(),
		totalCh = totalCh-1
		WHERE id = #{novelId};
	</update>
	
	<update id="updateTotalChByNovelId">
		UPDATE novel
		SET updateDate = NOW(),
		totalCh = #{totalCh}
		WHERE id = #{novelId};
	</update>
	
	<select id="getNovelsByMemberIdForSetup" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer, C.name AS extra__cateName
		FROM novel AS N
		INNER JOIN `member` AS M
		INNER JOIN category AS C
		ON N.memberId = M.id
		AND N.displayStatus = 1
		AND N.cateId = C.id
		AND M.id = #{memberId}
		ORDER BY N.id DESC;
	</select>
	
	<select id="getNovelsForPrint" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer, C.name AS extra__cateName
		FROM novel AS N
		INNER JOIN `member` AS M
		INNER JOIN category AS C
		ON N.memberId = M.id
		AND N.displayStatus = 1
		AND N.cateId = C.id
		AND seriesStatus = 1
		ORDER BY N.id DESC
		LIMIT #{start}, #{itemsInOnePage};
	</select>
	
	<select id="getNovelsBySearchKeywordForPrint" resultMap="novel">
		SELECT N.*, M.nickname AS extra__writer, C.name AS extra__cateName
		FROM novel AS N
		INNER JOIN `member` AS M
		INNER JOIN category AS C
		ON N.memberId = M.id
		AND N.displayStatus = 1
		AND N.cateId = C.id
		AND seriesStatus = 1
		AND N.name LIKE CONCAT('%', #{searchKeyword}, '%')
		ORDER BY N.id DESC
		LIMIT #{start}, #{itemsInOnePage};
	</select>
	
	<resultMap type="Novel" id="novel">
		<id property="id" column="id" />
		<id property="name" column="name" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="displayStatus" column="displayStatus" />
		<id property="cateId" column="cateId" />
		<id property="memberId" column="memberId" />
		<id property="seriesStatus" column="seriesStatus" />
		<id property="totalHit" column="totalHit" />
		<id property="totalCh" column="totalCh" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
			<id property="cateName" column="extra__cateName" />
		</association>
	</resultMap>
</mapper>